From 6497e28f3f7ddcd4158d13cc6618cfb19ccef27d Mon Sep 17 00:00:00 2001
From: Daniyal Mahmood <daniyalmahmhmood123@gmail.com>
Date: Mon, 26 Jul 2021 17:31:26 +0530
Subject: [PATCH 17/18] (fix): middleware sending multiple requests

add activityIndicator to indicate file upload and disable bsubmit button while upload
---
 react/features/upload-ppt/actions.any.js      |  6 +-
 .../components/native/UploadPPTDialog.js      | 15 +--
 .../upload-ppt/components/native/styles.js    |  8 +-
 react/features/upload-ppt/functions.js        | 13 +++
 react/features/upload-ppt/middleware.any.js   | 95 ++++++++-----------
 5 files changed, 71 insertions(+), 66 deletions(-)

diff --git a/react/features/upload-ppt/actions.any.js b/react/features/upload-ppt/actions.any.js
index 3238e59fb..ec9835e73 100644
--- a/react/features/upload-ppt/actions.any.js
+++ b/react/features/upload-ppt/actions.any.js
@@ -3,7 +3,7 @@ import { openDialog } from '../base/dialog/actions';
 import { getLocalParticipant } from '../base/participants';
 import { UploadPPTDialog } from './components';
 
-import { RESET_UPLOAD_PPT_STATUS, SET_UPLOAD_PPT_STATUS, RETRY_UPLOAD, TRY_UPLOAD } from './actionTypes';
+import { RESET_UPLOAD_PPT_STATUS, TRY_UPLOAD } from './actionTypes';
 
 /**
  * Resets the status of the upload PPT.
@@ -19,7 +19,7 @@ export function resetUploadPPTStatus() {
 }
 
 
-export function setUploadPPTStatus(file) {
+export function tryPPTUpload(file) {
     return (dispatch, getState) => {
     
         const conference = getCurrentConference(getState());
@@ -53,6 +53,6 @@ export function toggleUploadPresentation() {
     return (dispatch, getState) => {
         const state = getState();
         const { status } = state['features/upload-ppt'];
-            dispatch(showUploadPPTDialog( file => dispatch(setUploadPPTStatus(file))));
+            dispatch(showUploadPPTDialog( file => dispatch(tryPPTUpload(file))));
     };
 }
diff --git a/react/features/upload-ppt/components/native/UploadPPTDialog.js b/react/features/upload-ppt/components/native/UploadPPTDialog.js
index deda098ec..4719b6285 100644
--- a/react/features/upload-ppt/components/native/UploadPPTDialog.js
+++ b/react/features/upload-ppt/components/native/UploadPPTDialog.js
@@ -1,7 +1,7 @@
 // @flow
 
 import React from 'react';
-import { View, Text, TouchableOpacity } from 'react-native';
+import { View, Text, TouchableOpacity, ActivityIndicator } from 'react-native';
 
 import { CustomSubmitDialog} from '../../../base/dialog';
 import { connect } from '../../../base/redux';
@@ -59,7 +59,7 @@ class UploadPPTDialog extends AbstractUploadPPTDialog<*> {
 
     _invalidFile = () =>{
       if(Object.keys(this.state.file).length === 0) return null
-      return this._validated() ? null:<Text style = { styles.invalidFile }>please select a ppt or pptx file</Text>
+      return this._validated() ? null:<Text style = { styles.invalidFile }>Please select a .ppt or .pptx file</Text>
     }
  
 
@@ -71,13 +71,13 @@ class UploadPPTDialog extends AbstractUploadPPTDialog<*> {
     render() {
         return (
             <CustomSubmitDialog
-                okDisabled={ !this._validated() }
+                okDisabled={ !this._validated() || this.props.uploading }
                 okKey="Submit"
                 onCancel = { this._onCancel }
                 onSubmit = { this._toggleUploadPPT.bind(this) }>
                   
                 <View style= { styles.container }>
-                  <Text style= { styles.title }>Upload a presentation</Text>
+                  <Text style= { styles.title }>Upload a Presentation</Text>
                   <View style={ styles.upload } >
                     <Text style={ styles.fileInfo }>{ this.getFilename() }</Text>
                     <TouchableOpacity style = { styles.button } onPress={this.selectFileTapped.bind(this)}>
@@ -86,6 +86,7 @@ class UploadPPTDialog extends AbstractUploadPPTDialog<*> {
                   </View>   
                   {this._invalidFile()}
                 </View>  
+                <ActivityIndicator animating = {this.props.uploading} size="large" />
             </CustomSubmitDialog>
         );
     }
@@ -114,12 +115,12 @@ class UploadPPTDialog extends AbstractUploadPPTDialog<*> {
  * @returns {Props}
  */
 function _mapStateToProps(state, ownProps): Object {
-  const { failed = false, loading = false} = state['features/upload-ppt'];
+  const { loading = false}  = state['features/upload-ppt'];
+  console.log(loading)
 
   return {
-     uploadFailed: failed,
      uploading: loading
   };
 }
 
-export default connect(_mapStateToProps)(UploadPPTDialog);
+export default connect(_mapStateToProps)(UploadPPTDialog);
\ No newline at end of file
diff --git a/react/features/upload-ppt/components/native/styles.js b/react/features/upload-ppt/components/native/styles.js
index 713ec49a1..f8680fab6 100644
--- a/react/features/upload-ppt/components/native/styles.js
+++ b/react/features/upload-ppt/components/native/styles.js
@@ -26,11 +26,13 @@ const styles = StyleSheet.create({
     },
     title:{
       fontWeight:"bold",
-      fontSize:17,
-      paddingBottom:10
+      fontSize:20,
+      paddingBottom:30
     },
     invalidFile: {
-      color:"red"
+      color:"red",
+      fontSize:14,
+      padding:10
     }
   });
 
diff --git a/react/features/upload-ppt/functions.js b/react/features/upload-ppt/functions.js
index b4ba6ee55..634bb1b03 100644
--- a/react/features/upload-ppt/functions.js
+++ b/react/features/upload-ppt/functions.js
@@ -18,3 +18,16 @@ export function isVideoPlaying(stateful: Object | Function): boolean {
         && (p.name === PPT_PARTICIPANT_NAME))
     );
 }
+
+export  async function uploadPPT(requestOptions){
+
+    const response = await fetch("https://sangoshthee.cdac.in/FileUploadService", requestOptions)
+
+    if(!response.ok){
+        const message = `An error has occured: ${response.status}`;
+        throw new Error(message);
+    }
+
+    const result = await response.json()
+    return result
+}
diff --git a/react/features/upload-ppt/middleware.any.js b/react/features/upload-ppt/middleware.any.js
index 5c22cbcc0..bad9dd061 100644
--- a/react/features/upload-ppt/middleware.any.js
+++ b/react/features/upload-ppt/middleware.any.js
@@ -2,13 +2,12 @@
 
 import { CONFERENCE_LEFT, getCurrentConference, getRoomName} from '../base/conference';
 import { getLocalParticipant, PARTICIPANT_LEFT, participantLeft } from '../base/participants';
-import { MiddlewareRegistry, StateListenerRegistry } from '../base/redux';
-
+import { MiddlewareRegistry } from '../base/redux';
 import { SET_UPLOAD_PPT_STATUS, SET_UPLOADING, TRY_UPLOAD } from './actionTypes';
-import { resetUploadPPTStatus, retryUpload, setUploadPPTStatus } from './actions.any';
-import { batch } from 'react-redux';
+import { resetUploadPPTStatus } from './actions.any';
 import { openDialog } from '../base/dialog/actions';
 import { AlertDialog } from '../base/dialog/components'
+import { uploadPPT } from './functions'
 
 
 /**
@@ -17,7 +16,7 @@ import { AlertDialog } from '../base/dialog/components'
  * @param {Store} store - The redux store.
  * @returns {Function}
  */
-MiddlewareRegistry.register(store => next => async action => {
+MiddlewareRegistry.register(store => next => action => {
     const { dispatch, getState } = store;
     const state = getState();
     const conference = getCurrentConference(state)
@@ -33,7 +32,6 @@ MiddlewareRegistry.register(store => next => async action => {
 
         case TRY_UPLOAD:
             if (localParticipantId === ownerId) {
-                try{
                     const formdata = new FormData();
                     formdata.append("sampleFile", { name: file.fileName, uri: file.uri, type: file.type });
                     formdata.append("username", room)
@@ -45,57 +43,48 @@ MiddlewareRegistry.register(store => next => async action => {
                     };
 
                     dispatch({ 
-                                type: SET_UPLOADING,
-                                loading: true 
-                            })
-                  
+                        type: SET_UPLOADING,
+                        loading: true 
+                    })
 
-                    fetch("https://sangoshthee.cdac.in/FileUploadService", requestOptions)
-                        .then(response => response.text())
-                        .then(result =>  { 
-                            console.log(result)
-                            if(result.status === "1"){
-                                dispatch({
-                                    type: SET_UPLOAD_PPT_STATUS,
-                                    file,
-                                    status: result.status,
-                                    ownerId
-                                })
-                            }
-                            dispatch(openDialog(AlertDialog, {
-                                contentKey:{
-                                    key: result.message
-                                }
-                            }))
+                    uploadPPT(requestOptions)
+                    .then(result => {
+                        dispatch({
+                            type: SET_UPLOADING,
+                            loading: false
                         })
-                        .catch(error => {
-                            console.log('error', error)
-                            dispatch(openDialog(AlertDialog, {
-                                contentKey:error
-                            }))
-                        }); 
-                        dispatch({ 
+                        if(result.status==="1"){
+                            dispatch({
+                                type: SET_UPLOAD_PPT_STATUS,
+                                file,
+                                status: true,
+                                ownerId
+                            })
+                        }else {
+                            dispatch(resetUploadPPTStatus)
+                        }
+                        dispatch(openDialog(AlertDialog, {
+                            contentKey: {
+                                key: result.msg
+                            }
+                        }))
+                    })
+                    .catch(err =>{
+                        dispatch({
                             type: SET_UPLOADING,
-                            loading:false 
+                            loading: false
                         })
-                } catch(err){
-                    console.log(err)
-                    dispatch({ 
-                        type: SET_UPLOADING,
-                        loading: false 
+                        dispatch(openDialog(AlertDialog, {
+                            contentKey: {
+                                key: err
+                            }
+                        }))
+                        console.log(err)
                     })
-                }
+ 
+                    } 
+                break;
             }
-            break;
-
-        case PARTICIPANT_LEFT:
-            batch(()=>{
-                dispatch(participantLeft(localParticipantId, conference, false));
-                dispatch(resetUploadPPTStatus())
-            })
-            break;
+            return next(action);
         }
-
-    return next(action);
-});
-
+)
\ No newline at end of file
-- 
2.25.1

